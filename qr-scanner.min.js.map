{"version":3,"file":"qr-scanner.min.js","sources":["src/qr-scanner.ts"],"sourcesContent":["import jsQR from \"jsqr-es6\";\nimport { BitMatrix } from \"jsqr-es6/dist/BitMatrix\";\nimport {\n  initDecoder,\n  getDecoderInitialized,\n} from \"jsqr-es6/dist/decoder/reedsolomon\";\nimport { WorkerResult } from \"./WorkerResult\";\n\n// copied from worker.ts cuz they don't mix well\ntype GreyScaleWeights = {\n  red: number;\n  green: number;\n  blue: number;\n  useIntegerApproximation: boolean;\n};\n\nlet inversionAttempts: \"dontInvert\" | \"onlyInvert\" | \"attemptBoth\" =\n  \"attemptBoth\";\nlet greyScaleWeights: GreyScaleWeights = {\n  red: 77,\n  green: 150,\n  blue: 29,\n  useIntegerApproximation: true,\n};\n\nclass QrScanner {\n  static readonly DEFAULT_CANVAS_SIZE = 400;\n  static readonly NO_QR_CODE_FOUND = \"No QR code found\";\n  private static _disableBarcodeDetector = true;\n  private static _workerMessageId = 0;\n\n  /** @deprecated */\n  static set WORKER_PATH(workerPath: string) {\n    console.warn(\n      \"Setting QrScanner.WORKER_PATH is not required and not supported anymore. \" +\n        \"Have a look at the README for new setup instructions.\",\n    );\n  }\n\n  static async hasCamera(): Promise<boolean> {\n    try {\n      return !!(await QrScanner.listCameras(false)).length;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  static async listCameras(\n    requestLabels = false,\n  ): Promise<Array<QrScanner.Camera>> {\n    if (!navigator.mediaDevices) return [];\n\n    const enumerateCameras = async (): Promise<Array<MediaDeviceInfo>> =>\n      (await navigator.mediaDevices.enumerateDevices()).filter(\n        (device) => device.kind === \"videoinput\",\n      );\n\n    // Note that enumerateDevices can always be called and does not prompt the user for permission.\n    // However, enumerateDevices only includes device labels if served via https and an active media stream exists\n    // or permission to access the camera was given. Therefore, if we're not getting labels but labels are requested\n    // ask for camera permission by opening a stream.\n    let openedStream: MediaStream | undefined;\n    try {\n      if (\n        requestLabels &&\n        (await enumerateCameras()).every((camera) => !camera.label)\n      ) {\n        openedStream = await navigator.mediaDevices.getUserMedia({\n          audio: false,\n          video: true,\n        });\n      }\n    } catch (e) {\n      // Fail gracefully, especially if the device has no camera or on mobile when the camera is already in use\n      // and some browsers disallow a second stream.\n    }\n\n    try {\n      return (await enumerateCameras()).map((camera, i) => ({\n        id: camera.deviceId,\n        label: camera.label || (i === 0 ? \"Default Camera\" : `Camera ${i + 1}`),\n      }));\n    } finally {\n      // close the stream we just opened for getting camera access for listing the device labels\n      if (openedStream) {\n        console.warn(\n          \"Call listCameras after successfully starting a QR scanner to avoid creating \" +\n            \"a temporary video stream\",\n        );\n        QrScanner._stopVideoStream(openedStream);\n      }\n    }\n  }\n\n  readonly $video: HTMLVideoElement;\n  readonly $canvas: HTMLCanvasElement;\n  readonly $overlay?: HTMLDivElement;\n  private readonly $codeOutlineHighlight?: SVGSVGElement;\n  private readonly _onDecode?: (result: QrScanner.ScanResult) => void;\n  private readonly _legacyOnDecode?: (result: string) => void;\n  private readonly _legacyCanvasSize: number = QrScanner.DEFAULT_CANVAS_SIZE;\n  private _preferredCamera: QrScanner.FacingMode | QrScanner.DeviceId =\n    \"environment\";\n  private readonly _maxScansPerSecond: number = 25;\n  private _lastScanTimestamp: number = -1;\n  private _scanRegion: QrScanner.ScanRegion;\n  private _codeOutlineHighlightRemovalTimeout?: number;\n  private _qrEngine: Worker;\n  private _active: boolean = false;\n  private _paused: boolean = false;\n  private _flashOn: boolean = false;\n  private _destroyed: boolean = false;\n\n  constructor(\n    video: HTMLVideoElement,\n    onDecode: (result: QrScanner.ScanResult) => void,\n    options: {\n      onDecodeError?: (error: Error | string) => void;\n      calculateScanRegion?: (video: HTMLVideoElement) => QrScanner.ScanRegion;\n      preferredCamera?: QrScanner.FacingMode | QrScanner.DeviceId;\n      maxScansPerSecond?: number;\n      highlightScanRegion?: boolean;\n      highlightCodeOutline?: boolean;\n      overlay?: HTMLDivElement;\n      /** just a temporary flag until we switch entirely to the new api */\n      returnDetailedScanResult?: true;\n    },\n  );\n  /** @deprecated */\n  constructor(\n    video: HTMLVideoElement,\n    onDecode: (result: string) => void,\n    onDecodeError?: (error: Error | string) => void,\n    calculateScanRegion?: (video: HTMLVideoElement) => QrScanner.ScanRegion,\n    preferredCamera?: QrScanner.FacingMode | QrScanner.DeviceId,\n  );\n  /** @deprecated */\n  constructor(\n    video: HTMLVideoElement,\n    onDecode: (result: string) => void,\n    onDecodeError?: (error: Error | string) => void,\n    canvasSize?: number,\n    preferredCamera?: QrScanner.FacingMode | QrScanner.DeviceId,\n  );\n  /** @deprecated */\n  constructor(\n    video: HTMLVideoElement,\n    onDecode: (result: string) => void,\n    canvasSize?: number,\n  );\n  constructor(\n    video: HTMLVideoElement,\n    onDecode:\n      | ((result: QrScanner.ScanResult) => void)\n      | ((result: string) => void),\n    canvasSizeOrOnDecodeErrorOrOptions?:\n      | number\n      | ((error: Error | string) => void)\n      | {\n          onDecodeError?: (error: Error | string) => void;\n          calculateScanRegion?: (\n            video: HTMLVideoElement,\n          ) => QrScanner.ScanRegion;\n          preferredCamera?: QrScanner.FacingMode | QrScanner.DeviceId;\n          maxScansPerSecond?: number;\n          highlightScanRegion?: boolean;\n          highlightCodeOutline?: boolean;\n          overlay?: HTMLDivElement;\n          /** just a temporary flag until we switch entirely to the new api */\n          returnDetailedScanResult?: true;\n        },\n    canvasSizeOrCalculateScanRegion?:\n      | number\n      | ((video: HTMLVideoElement) => QrScanner.ScanRegion),\n    preferredCamera?: QrScanner.FacingMode | QrScanner.DeviceId,\n  ) {\n    this.$video = video;\n    this.$canvas = document.createElement(\"canvas\");\n\n    if (\n      canvasSizeOrOnDecodeErrorOrOptions &&\n      typeof canvasSizeOrOnDecodeErrorOrOptions === \"object\"\n    ) {\n      // we got an options object using the new api\n      this._onDecode = onDecode as QrScanner[\"_onDecode\"];\n    } else {\n      if (\n        canvasSizeOrOnDecodeErrorOrOptions ||\n        canvasSizeOrCalculateScanRegion ||\n        preferredCamera\n      ) {\n        console.warn(\n          \"You're using a deprecated version of the QrScanner constructor which will be removed in \" +\n            \"the future\",\n        );\n      } else {\n        // Only video and onDecode were specified and we can't distinguish between new or old api usage. For\n        // backwards compatibility we have to assume the old api for now. The options object is marked as non-\n        // optional in the parameter list above to make clear that ScanResult instead of string is only passed\n        // if an options object was provided. However, in the future once legacy support is removed, the options\n        // object should become optional.\n        console.warn(\n          \"Note that the type of the scan result passed to onDecode will change in the future. \" +\n            \"To already switch to the new api today, you can pass returnDetailedScanResult: true.\",\n        );\n      }\n      this._legacyOnDecode = onDecode as QrScanner[\"_legacyOnDecode\"];\n    }\n\n    const options =\n      typeof canvasSizeOrOnDecodeErrorOrOptions === \"object\"\n        ? canvasSizeOrOnDecodeErrorOrOptions\n        : {};\n    this._onDecodeError =\n      options.onDecodeError ||\n      (typeof canvasSizeOrOnDecodeErrorOrOptions === \"function\"\n        ? canvasSizeOrOnDecodeErrorOrOptions\n        : this._onDecodeError);\n    this._calculateScanRegion =\n      options.calculateScanRegion ||\n      (typeof canvasSizeOrCalculateScanRegion === \"function\"\n        ? canvasSizeOrCalculateScanRegion\n        : this._calculateScanRegion);\n    this._preferredCamera =\n      options.preferredCamera || preferredCamera || this._preferredCamera;\n    this._legacyCanvasSize =\n      typeof canvasSizeOrOnDecodeErrorOrOptions === \"number\"\n        ? canvasSizeOrOnDecodeErrorOrOptions\n        : typeof canvasSizeOrCalculateScanRegion === \"number\"\n          ? canvasSizeOrCalculateScanRegion\n          : this._legacyCanvasSize;\n    this._maxScansPerSecond =\n      options.maxScansPerSecond || this._maxScansPerSecond;\n\n    this._onPlay = this._onPlay.bind(this);\n    this._onLoadedMetaData = this._onLoadedMetaData.bind(this);\n    this._onVisibilityChange = this._onVisibilityChange.bind(this);\n    this._updateOverlay = this._updateOverlay.bind(this);\n\n    // @ts-ignore\n    video.disablePictureInPicture = true;\n    // Allow inline playback on iPhone instead of requiring full screen playback,\n    // see https://webkit.org/blog/6784/new-video-policies-for-ios/\n    // @ts-ignore\n    video.playsInline = true;\n    // Allow play() on iPhone without requiring a user gesture. Should not really be needed as camera stream\n    // includes no audio, but just to be safe.\n    video.muted = true;\n\n    // Avoid Safari stopping the video stream on a hidden video.\n    // See https://github.com/cozmo/jsQR/issues/185\n    let shouldHideVideo = false;\n    if (video.hidden) {\n      video.hidden = false;\n      shouldHideVideo = true;\n    }\n    if (!document.body.contains(video)) {\n      document.body.appendChild(video);\n      shouldHideVideo = true;\n    }\n    const videoContainer = video.parentElement!;\n\n    if (options.highlightScanRegion || options.highlightCodeOutline) {\n      const gotExternalOverlay = !!options.overlay;\n      this.$overlay = options.overlay || document.createElement(\"div\");\n      const overlayStyle = this.$overlay.style;\n      overlayStyle.position = \"absolute\";\n      overlayStyle.display = \"none\";\n      overlayStyle.pointerEvents = \"none\";\n      this.$overlay.classList.add(\"scan-region-highlight\");\n      if (!gotExternalOverlay && options.highlightScanRegion) {\n        // default style; can be overwritten via css, e.g. by changing the svg's stroke color, hiding the\n        // .scan-region-highlight-svg, setting a border, outline, background, etc.\n        this.$overlay.innerHTML =\n          '<svg class=\"scan-region-highlight-svg\" viewBox=\"0 0 238 238\" ' +\n          'preserveAspectRatio=\"none\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;' +\n          'fill:none;stroke:#e9b213;stroke-width:4;stroke-linecap:round;stroke-linejoin:round\">' +\n          '<path d=\"M31 2H10a8 8 0 0 0-8 8v21M207 2h21a8 8 0 0 1 8 8v21m0 176v21a8 8 0 0 1-8 8h-21m-176 ' +\n          '0H10a8 8 0 0 1-8-8v-21\"/></svg>';\n        try {\n          this.$overlay.firstElementChild!.animate(\n            { transform: [\"scale(.98)\", \"scale(1.01)\"] },\n            {\n              duration: 400,\n              iterations: Infinity,\n              direction: \"alternate\",\n              easing: \"ease-in-out\",\n            },\n          );\n        } catch (e) {}\n        videoContainer.insertBefore(this.$overlay, this.$video.nextSibling);\n      }\n      if (options.highlightCodeOutline) {\n        // default style; can be overwritten via css\n        this.$overlay.insertAdjacentHTML(\n          \"beforeend\",\n          '<svg class=\"code-outline-highlight\" preserveAspectRatio=\"none\" style=\"display:none;width:100%;' +\n            \"height:100%;fill:none;stroke:#e9b213;stroke-width:5;stroke-dasharray:25;\" +\n            'stroke-linecap:round;stroke-linejoin:round\"><polygon/></svg>',\n        );\n        this.$codeOutlineHighlight = this.$overlay\n          .lastElementChild as SVGSVGElement;\n      }\n    }\n    this._scanRegion = this._calculateScanRegion(video);\n\n    requestAnimationFrame(() => {\n      // Checking in requestAnimationFrame which should avoid a potential additional re-flow for getComputedStyle.\n      const videoStyle = window.getComputedStyle(video);\n      if (videoStyle.display === \"none\") {\n        video.style.setProperty(\"display\", \"block\", \"important\");\n        shouldHideVideo = true;\n      }\n      if (videoStyle.visibility !== \"visible\") {\n        video.style.setProperty(\"visibility\", \"visible\", \"important\");\n        shouldHideVideo = true;\n      }\n      if (shouldHideVideo) {\n        // Hide the video in a way that doesn't cause Safari to stop the playback.\n        console.warn(\n          \"QrScanner has overwritten the video hiding style to avoid Safari stopping the playback.\",\n        );\n        video.style.opacity = \"0\";\n        video.style.width = \"0\";\n        video.style.height = \"0\";\n        if (this.$overlay && this.$overlay.parentElement) {\n          this.$overlay.parentElement.removeChild(this.$overlay);\n        }\n        // @ts-ignore\n        delete this.$overlay!;\n        // @ts-ignore\n        delete this.$codeOutlineHighlight!;\n      }\n\n      if (this.$overlay) {\n        this._updateOverlay();\n      }\n    });\n\n    video.addEventListener(\"play\", this._onPlay);\n    video.addEventListener(\"loadedmetadata\", this._onLoadedMetaData);\n    document.addEventListener(\"visibilitychange\", this._onVisibilityChange);\n    window.addEventListener(\"resize\", this._updateOverlay);\n\n    this._qrEngine = QrScanner.createQrEngine();\n  }\n\n  async hasFlash(): Promise<boolean> {\n    let stream: MediaStream | undefined;\n    try {\n      if (this.$video.srcObject) {\n        if (!(this.$video.srcObject instanceof MediaStream)) return false; // srcObject is not a camera stream\n        stream = this.$video.srcObject;\n      } else {\n        stream = (await this._getCameraStream()).stream;\n      }\n      return \"torch\" in stream.getVideoTracks()[0].getSettings();\n    } catch (e) {\n      return false;\n    } finally {\n      // close the stream we just opened for detecting whether it supports flash\n      if (stream && stream !== this.$video.srcObject) {\n        console.warn(\n          \"Call hasFlash after successfully starting the scanner to avoid creating \" +\n            \"a temporary video stream\",\n        );\n        QrScanner._stopVideoStream(stream);\n      }\n    }\n  }\n\n  isFlashOn(): boolean {\n    return this._flashOn;\n  }\n\n  async toggleFlash(): Promise<void> {\n    if (this._flashOn) {\n      await this.turnFlashOff();\n    } else {\n      await this.turnFlashOn();\n    }\n  }\n\n  async turnFlashOn(): Promise<void> {\n    if (this._flashOn || this._destroyed) return;\n    this._flashOn = true;\n    if (!this._active || this._paused) return; // flash will be turned on later on .start()\n    try {\n      if (!(await this.hasFlash())) throw \"No flash available\";\n      // Note that the video track is guaranteed to exist and to be a MediaStream due to the check in hasFlash\n      await (this.$video.srcObject as MediaStream)\n        .getVideoTracks()[0]\n        .applyConstraints({\n          // @ts-ignore: constraint 'torch' is unknown to ts\n          advanced: [{ torch: true }],\n        });\n    } catch (e) {\n      this._flashOn = false;\n      throw e;\n    }\n  }\n\n  async turnFlashOff(): Promise<void> {\n    if (!this._flashOn) return;\n    // applyConstraints with torch: false does not work to turn the flashlight off, as a stream's torch stays\n    // continuously on, see https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints#torch. Therefore,\n    // we have to stop the stream to turn the flashlight off.\n    this._flashOn = false;\n    await this._restartVideoStream();\n  }\n\n  destroy(): void {\n    this.$video.removeEventListener(\"loadedmetadata\", this._onLoadedMetaData);\n    this.$video.removeEventListener(\"play\", this._onPlay);\n    document.removeEventListener(\"visibilitychange\", this._onVisibilityChange);\n    window.removeEventListener(\"resize\", this._updateOverlay);\n\n    this._destroyed = true;\n    this._flashOn = false;\n    this.stop(); // sets this._paused = true and this._active = false\n    QrScanner._postWorkerMessage(this._qrEngine, \"close\");\n  }\n\n  async start(): Promise<void> {\n    if (this._destroyed)\n      throw new Error(\n        \"The QR scanner can not be started as it had been destroyed.\",\n      );\n    if (this._active && !this._paused) return;\n\n    if (window.location.protocol !== \"https:\") {\n      // warn but try starting the camera anyways\n      console.warn(\n        \"The camera stream is only accessible if the page is transferred via https.\",\n      );\n    }\n\n    this._active = true;\n    if (document.hidden) return; // camera will be started as soon as tab is in foreground\n    this._paused = false;\n    if (this.$video.srcObject) {\n      // camera stream already/still set\n      await this.$video.play();\n      return;\n    }\n\n    try {\n      const { stream, facingMode } = await this._getCameraStream();\n      if (!this._active || this._paused) {\n        // was stopped in the meantime\n        QrScanner._stopVideoStream(stream);\n        return;\n      }\n      this._setVideoMirror(facingMode);\n      this.$video.srcObject = stream;\n      await this.$video.play();\n\n      // Restart the flash if it was previously on\n      if (this._flashOn) {\n        this._flashOn = false; // force turnFlashOn to restart the flash\n        this.turnFlashOn().catch(() => {});\n      }\n    } catch (e) {\n      if (this._paused) return;\n      this._active = false;\n      throw e;\n    }\n  }\n\n  stop(): void {\n    this.pause();\n    this._active = false;\n  }\n\n  async pause(stopStreamImmediately = false): Promise<boolean> {\n    this._paused = true;\n    if (!this._active) return true;\n    this.$video.pause();\n\n    if (this.$overlay) {\n      this.$overlay.style.display = \"none\";\n    }\n\n    const stopStream = () => {\n      if (this.$video.srcObject instanceof MediaStream) {\n        // revoke srcObject only if it's a stream which was likely set by us\n        QrScanner._stopVideoStream(this.$video.srcObject);\n        this.$video.srcObject = null;\n      }\n    };\n\n    if (stopStreamImmediately) {\n      stopStream();\n      return true;\n    }\n\n    await new Promise((resolve) => setTimeout(resolve, 300));\n    if (!this._paused) return false;\n    stopStream();\n    return true;\n  }\n\n  async setCamera(\n    facingModeOrDeviceId: QrScanner.FacingMode | QrScanner.DeviceId,\n  ): Promise<void> {\n    if (facingModeOrDeviceId === this._preferredCamera) return;\n    this._preferredCamera = facingModeOrDeviceId;\n    // Restart the scanner with the new camera which will also update the video mirror and the scan region.\n    await this._restartVideoStream();\n  }\n\n  static async scanImage(\n    imageOrFileOrBlobOrUrl:\n      | HTMLImageElement\n      | HTMLVideoElement\n      | HTMLCanvasElement\n      | OffscreenCanvas\n      | ImageBitmap\n      | SVGImageElement\n      | File\n      | Blob\n      | URL\n      | String,\n    options: {\n      scanRegion?: QrScanner.ScanRegion | null;\n      qrEngine?: Worker | null;\n      canvas?: HTMLCanvasElement | null;\n      disallowCanvasResizing?: boolean;\n      alsoTryWithoutScanRegion?: boolean;\n      /** just a temporary flag until we switch entirely to the new api */\n      returnDetailedScanResult?: true;\n    },\n  ): Promise<QrScanner.ScanResult>;\n  /** @deprecated */\n  static async scanImage(\n    imageOrFileOrBlobOrUrl:\n      | HTMLImageElement\n      | HTMLVideoElement\n      | HTMLCanvasElement\n      | OffscreenCanvas\n      | ImageBitmap\n      | SVGImageElement\n      | File\n      | Blob\n      | URL\n      | String,\n    scanRegion?: QrScanner.ScanRegion | null,\n    qrEngine?:\n      | Worker\n      | BarcodeDetector\n      | Promise<Worker | BarcodeDetector>\n      | null,\n    canvas?: HTMLCanvasElement | null,\n    disallowCanvasResizing?: boolean,\n    alsoTryWithoutScanRegion?: boolean,\n  ): Promise<string>;\n  static async scanImage(\n    imageOrFileOrBlobOrUrl:\n      | HTMLImageElement\n      | HTMLVideoElement\n      | HTMLCanvasElement\n      | OffscreenCanvas\n      | ImageBitmap\n      | SVGImageElement\n      | File\n      | Blob\n      | URL\n      | String,\n    scanRegionOrOptions?:\n      | QrScanner.ScanRegion\n      | {\n          scanRegion?: QrScanner.ScanRegion | null;\n          qrEngine?: Worker | null;\n          canvas?: HTMLCanvasElement | null;\n          disallowCanvasResizing?: boolean;\n          alsoTryWithoutScanRegion?: boolean;\n          /** just a temporary flag until we switch entirely to the new api */\n          returnDetailedScanResult?: true;\n        }\n      | null,\n    qrEngine?: Worker | null,\n    canvas?: HTMLCanvasElement | null,\n    disallowCanvasResizing: boolean = false,\n    alsoTryWithoutScanRegion: boolean = false,\n  ): Promise<string | QrScanner.ScanResult> {\n    let scanRegion: QrScanner.ScanRegion | null | undefined;\n    let returnDetailedScanResult = false;\n    if (\n      scanRegionOrOptions &&\n      (\"scanRegion\" in scanRegionOrOptions ||\n        \"qrEngine\" in scanRegionOrOptions ||\n        \"canvas\" in scanRegionOrOptions ||\n        \"disallowCanvasResizing\" in scanRegionOrOptions ||\n        \"alsoTryWithoutScanRegion\" in scanRegionOrOptions ||\n        \"returnDetailedScanResult\" in scanRegionOrOptions)\n    ) {\n      // we got an options object using the new api\n      scanRegion = scanRegionOrOptions.scanRegion;\n      qrEngine = scanRegionOrOptions.qrEngine;\n      canvas = scanRegionOrOptions.canvas;\n      disallowCanvasResizing =\n        scanRegionOrOptions.disallowCanvasResizing || false;\n      alsoTryWithoutScanRegion =\n        scanRegionOrOptions.alsoTryWithoutScanRegion || false;\n      returnDetailedScanResult = true;\n    } else if (\n      scanRegionOrOptions ||\n      qrEngine ||\n      canvas ||\n      disallowCanvasResizing ||\n      alsoTryWithoutScanRegion\n    ) {\n      console.warn(\n        \"You're using a deprecated api for scanImage which will be removed in the future.\",\n      );\n    } else {\n      // Only imageOrFileOrBlobOrUrl was specified and we can't distinguish between new or old api usage. For\n      // backwards compatibility we have to assume the old api for now. The options object is marked as non-\n      // optional in the parameter list above to make clear that ScanResult instead of string is only returned if\n      // an options object was provided. However, in the future once legacy support is removed, the options object\n      // should become optional.\n      console.warn(\n        \"Note that the return type of scanImage will change in the future. To already switch to the \" +\n          \"new api today, you can pass returnDetailedScanResult: true.\",\n      );\n    }\n\n    try {\n      let image:\n        | HTMLImageElement\n        | HTMLVideoElement\n        | HTMLCanvasElement\n        | OffscreenCanvas\n        | ImageBitmap\n        | SVGImageElement;\n      let canvasContext: CanvasRenderingContext2D;\n\n      image = await QrScanner._loadImage(imageOrFileOrBlobOrUrl);\n      [canvas, canvasContext] = QrScanner._drawToCanvas(\n        image,\n        scanRegion,\n        canvas,\n        disallowCanvasResizing,\n      );\n      let detailedScanResult: QrScanner.ScanResult;\n\n      // we turn this on by default\n      // if (!gotExternalEngine) {\n      // Enable scanning of inverted color qr codes.\n      // QrScanner._postWorkerMessageSync(qrEngine, 'inversionMode', 'both');\n      // }\n      if (qrEngine) {\n        detailedScanResult = await new Promise((resolve, reject) => {\n          let timeout: number;\n          let onMessage: (event: MessageEvent) => void;\n          let onError: (error: ErrorEvent | string) => void;\n          let expectedResponseId = -1;\n          onMessage = (event: MessageEvent) => {\n            if (event.data.id !== expectedResponseId) {\n              return;\n            }\n            qrEngine!.removeEventListener(\"message\", onMessage);\n            qrEngine!.removeEventListener(\"error\", onError);\n            clearTimeout(timeout);\n            if (event.data.data !== null) {\n              const data = event.data as WorkerResult;\n              const res: QrScanner.ScanResult = {\n                data: data.data!,\n                cornerPointsOrig: data.cornerPoints!,\n                cornerPoints: QrScanner._convertPoints(\n                  data.cornerPoints!,\n                  scanRegion,\n                ),\n                version: data.version!,\n                matrix: BitMatrix.createFromPacked(\n                  data.matrixData!,\n                  data.matrixWidth!,\n                  data.matrixWidth!,\n                ),\n                matrixCorrected: BitMatrix.createFromPacked(\n                  data.matrixDataCorrected!,\n                  data.matrixWidth!,\n                  data.matrixWidth!,\n                ),\n                ecLevel: data.ecLevel!,\n                dataMask: data.dataMask!,\n              };\n\n              if (imageOrFileOrBlobOrUrl instanceof HTMLVideoElement) {\n                canvas!.toBlob((blob) => {\n                  if (blob) {\n                    resolve({ ...res, scannedFrame: blob });\n                  } else {\n                    resolve(res);\n                  }\n                });\n              } else {\n                resolve(res);\n              }\n            } else {\n              reject(QrScanner.NO_QR_CODE_FOUND);\n            }\n          };\n          onError = (error: ErrorEvent | string) => {\n            qrEngine!.removeEventListener(\"message\", onMessage);\n            qrEngine!.removeEventListener(\"error\", onError);\n            clearTimeout(timeout);\n            const errorMessage = !error\n              ? \"Unknown Error\"\n              : (error as ErrorEvent).message || error;\n            reject(\"Scanner error: \" + errorMessage);\n          };\n          qrEngine!.addEventListener(\"message\", onMessage);\n          qrEngine!.addEventListener(\"error\", onError);\n          timeout = setTimeout(() => onError(\"timeout\"), 10000);\n          const imageData = canvasContext.getImageData(\n            0,\n            0,\n            canvas!.width,\n            canvas!.height,\n          );\n          expectedResponseId = QrScanner._postWorkerMessageSync(\n            qrEngine!,\n            \"decode\",\n            imageData,\n            [imageData.data.buffer],\n          );\n        });\n      } else {\n        // do it without worker\n        if (!getDecoderInitialized()) {\n          await initDecoder();\n        }\n        const data = canvasContext.getImageData(\n          0,\n          0,\n          canvas!.width,\n          canvas!.height,\n        );\n        const res = jsQR(data.data, data.width, data.height, {\n          inversionAttempts,\n          greyScaleWeights,\n        });\n        if (!res) {\n          throw \"Scanner error: \" + QrScanner.NO_QR_CODE_FOUND;\n        } else {\n          const cornerPoints = [\n            res.location.topLeftCorner,\n            res.location.topRightCorner,\n            res.location.bottomRightCorner,\n            res.location.bottomLeftCorner,\n          ];\n          detailedScanResult = {\n            data: res.data,\n            cornerPoints: QrScanner._convertPoints(cornerPoints, scanRegion),\n            cornerPointsOrig: cornerPoints,\n            version: res.version,\n            matrix: res.matrix,\n            matrixCorrected: res.matrixCorrected,\n            ecLevel: res.ecLevel,\n            dataMask: res.dataMask,\n          } as QrScanner.ScanResult;\n        }\n      }\n      return returnDetailedScanResult\n        ? detailedScanResult\n        : detailedScanResult.data;\n    } catch (e) {\n      if (!scanRegion || !alsoTryWithoutScanRegion) throw e;\n      const detailedScanResult = await QrScanner.scanImage(\n        imageOrFileOrBlobOrUrl,\n        { qrEngine, canvas, disallowCanvasResizing },\n      );\n      return returnDetailedScanResult\n        ? detailedScanResult\n        : detailedScanResult.data;\n    }\n    // we won't use a temporarily created engine anyways\n    // finally {\n    //     if (!gotExternalEngine) {\n    //         QrScanner._postWorkerMessage(qrEngine!, 'close');\n    //     }\n    // }\n  }\n\n  setGrayscaleWeights(\n    red: number,\n    green: number,\n    blue: number,\n    useIntegerApproximation: boolean = true,\n  ): void {\n    // Note that for the native BarcodeDecoder or if the worker was destroyed, this is a no-op. However, the native\n    // implementations work also well with colored qr codes.\n    QrScanner._postWorkerMessage(this._qrEngine, \"grayscaleWeights\", {\n      red,\n      green,\n      blue,\n      useIntegerApproximation,\n    });\n  }\n\n  setInversionMode(inversionMode: QrScanner.InversionMode): void {\n    // Note that for the native BarcodeDecoder or if the worker was destroyed, this is a no-op. However, the native\n    // implementations scan normal and inverted qr codes by default\n    QrScanner._postWorkerMessage(\n      this._qrEngine,\n      \"inversionMode\",\n      inversionMode,\n    );\n  }\n\n  static createQrEngine(): Worker;\n  /** @deprecated */\n  static createQrEngine(workerPath: string): Worker;\n  static createQrEngine(workerPath?: string): Worker {\n    if (workerPath) {\n      console.warn(\n        \"Specifying a worker path is not required and not supported anymore.\",\n      );\n    }\n\n    return new Worker(new URL(\"./qr-scanner-worker.min.js\", import.meta.url), {\n      type: \"module\",\n    });\n  }\n\n  private _onPlay(): void {\n    this._scanRegion = this._calculateScanRegion(this.$video);\n    this._updateOverlay();\n    if (this.$overlay) {\n      this.$overlay.style.display = \"\";\n    }\n    this._scanFrame();\n  }\n\n  private _onLoadedMetaData(): void {\n    this._scanRegion = this._calculateScanRegion(this.$video);\n    this._updateOverlay();\n  }\n\n  private _onVisibilityChange(): void {\n    if (document.hidden) {\n      this.pause();\n    } else if (this._active) {\n      this.start();\n    }\n  }\n\n  private _calculateScanRegion(video: HTMLVideoElement): QrScanner.ScanRegion {\n    // Default scan region calculation. Note that this can be overwritten in the constructor.\n    const smallestDimension = Math.min(video.videoWidth, video.videoHeight);\n    const scanRegionSize = Math.round((2 / 3) * smallestDimension);\n    return {\n      x: Math.round((video.videoWidth - scanRegionSize) / 2),\n      y: Math.round((video.videoHeight - scanRegionSize) / 2),\n      width: scanRegionSize,\n      height: scanRegionSize,\n      downScaledWidth: this._legacyCanvasSize,\n      downScaledHeight: this._legacyCanvasSize,\n    };\n  }\n\n  private _updateOverlay(): void {\n    requestAnimationFrame(() => {\n      // Running in requestAnimationFrame which should avoid a potential additional re-flow for getComputedStyle\n      // and offsetWidth, offsetHeight, offsetLeft, offsetTop.\n      if (!this.$overlay) return;\n      const video = this.$video;\n      const videoWidth = video.videoWidth;\n      const videoHeight = video.videoHeight;\n      const elementWidth = video.offsetWidth;\n      const elementHeight = video.offsetHeight;\n      const elementX = video.offsetLeft;\n      const elementY = video.offsetTop;\n\n      const videoStyle = window.getComputedStyle(video);\n      const videoObjectFit = videoStyle.objectFit;\n      const videoAspectRatio = videoWidth / videoHeight;\n      const elementAspectRatio = elementWidth / elementHeight;\n      let videoScaledWidth: number;\n      let videoScaledHeight: number;\n      switch (videoObjectFit) {\n        case \"none\":\n          videoScaledWidth = videoWidth;\n          videoScaledHeight = videoHeight;\n          break;\n        case \"fill\":\n          videoScaledWidth = elementWidth;\n          videoScaledHeight = elementHeight;\n          break;\n        default: // 'cover', 'contains', 'scale-down'\n          if (\n            videoObjectFit === \"cover\"\n              ? videoAspectRatio > elementAspectRatio\n              : videoAspectRatio < elementAspectRatio\n          ) {\n            // The scaled height is the element height\n            // - for 'cover' if the video aspect ratio is wider than the element aspect ratio\n            //   (scaled height matches element height and scaled width overflows element width)\n            // - for 'contains'/'scale-down' if element aspect ratio is wider than the video aspect ratio\n            //   (scaled height matched element height and element width overflows scaled width)\n            videoScaledHeight = elementHeight;\n            videoScaledWidth = videoScaledHeight * videoAspectRatio;\n          } else {\n            videoScaledWidth = elementWidth;\n            videoScaledHeight = videoScaledWidth / videoAspectRatio;\n          }\n          if (videoObjectFit === \"scale-down\") {\n            // for 'scale-down' the dimensions are the minimum of 'contains' and 'none'\n            videoScaledWidth = Math.min(videoScaledWidth, videoWidth);\n            videoScaledHeight = Math.min(videoScaledHeight, videoHeight);\n          }\n      }\n\n      // getComputedStyle is so nice to convert keywords (left, center, right, top, bottom) to percent and makes\n      // sure to set the default of 50% if only one or no component was provided, therefore we can be sure that\n      // both components are set. Additionally, it converts units other than px (e.g. rem) to px.\n      const [videoX, videoY] = videoStyle.objectPosition\n        .split(\" \")\n        .map((length, i) => {\n          const lengthValue = parseFloat(length);\n          return length.endsWith(\"%\")\n            ? ((!i\n                ? elementWidth - videoScaledWidth\n                : elementHeight - videoScaledHeight) *\n                lengthValue) /\n                100\n            : lengthValue;\n        });\n\n      const regionWidth = this._scanRegion.width || videoWidth;\n      const regionHeight = this._scanRegion.height || videoHeight;\n      const regionX = this._scanRegion.x || 0;\n      const regionY = this._scanRegion.y || 0;\n\n      const overlayStyle = this.$overlay.style;\n      overlayStyle.width = `${(regionWidth / videoWidth) * videoScaledWidth}px`;\n      overlayStyle.height = `${(regionHeight / videoHeight) * videoScaledHeight}px`;\n      overlayStyle.top = `${elementY + videoY + (regionY / videoHeight) * videoScaledHeight}px`;\n      const isVideoMirrored = /scaleX\\(-1\\)/.test(video.style.transform!);\n      overlayStyle.left = `${\n        elementX +\n        (isVideoMirrored ? elementWidth - videoX - videoScaledWidth : videoX) +\n        ((isVideoMirrored ? videoWidth - regionX - regionWidth : regionX) /\n          videoWidth) *\n          videoScaledWidth\n      }px`;\n      // apply same mirror as on video\n      overlayStyle.transform = video.style.transform;\n    });\n  }\n\n  private static _convertPoints(\n    points: QrScanner.Point[],\n    scanRegion?: QrScanner.ScanRegion | null,\n  ): QrScanner.Point[] {\n    if (!scanRegion) return points;\n    // create a new array so we don't mangle the original array's Points\n    let converted: QrScanner.Point[] = [];\n    const offsetX = scanRegion.x || 0;\n    const offsetY = scanRegion.y || 0;\n    const scaleFactorX =\n      scanRegion.width && scanRegion.downScaledWidth\n        ? scanRegion.width / scanRegion.downScaledWidth\n        : 1;\n    const scaleFactorY =\n      scanRegion.height && scanRegion.downScaledHeight\n        ? scanRegion.height / scanRegion.downScaledHeight\n        : 1;\n    for (const point of points) {\n      converted = [\n        ...converted,\n        {\n          x: point.x * scaleFactorX + offsetX,\n          y: point.y * scaleFactorY + offsetY,\n        },\n      ];\n    }\n    return converted;\n  }\n\n  private _scanFrame(): void {\n    if (!this._active || this.$video.paused || this.$video.ended) return;\n    // If requestVideoFrameCallback is available use that to avoid unnecessary scans on the same frame as the\n    // camera's framerate can be lower than the screen refresh rate and this._maxScansPerSecond, especially in dark\n    // settings where the exposure time is longer. Both, requestVideoFrameCallback and requestAnimationFrame are not\n    // being fired if the tab is in the background, which is what we want.\n    const requestFrame =\n      \"requestVideoFrameCallback\" in this.$video\n        ? // @ts-ignore\n          this.$video.requestVideoFrameCallback.bind(this.$video)\n        : requestAnimationFrame;\n    requestFrame(async () => {\n      if (this.$video.readyState <= 1) {\n        // Skip scans until the video is ready as drawImage() only works correctly on a video with readyState\n        // > 1, see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage#Notes.\n        // This also avoids false positives for videos paused after a successful scan which remains visible on\n        // the canvas until the video is started again and ready.\n        this._scanFrame();\n        return;\n      }\n\n      const timeSinceLastScan = Date.now() - this._lastScanTimestamp;\n      const minimumTimeBetweenScans = 1000 / this._maxScansPerSecond;\n      if (timeSinceLastScan < minimumTimeBetweenScans) {\n        await new Promise((resolve) =>\n          setTimeout(resolve, minimumTimeBetweenScans - timeSinceLastScan),\n        );\n      }\n      // console.log('Scan rate:', Math.round(1000 / (Date.now() - this._lastScanTimestamp)));\n      this._lastScanTimestamp = Date.now();\n\n      let result: QrScanner.ScanResult | undefined;\n      try {\n        result = await QrScanner.scanImage(this.$video, {\n          scanRegion: this._scanRegion,\n          qrEngine: this._qrEngine,\n          canvas: this.$canvas,\n        });\n      } catch (error) {\n        if (!this._active) return;\n        this._onDecodeError(error as Error | string);\n      }\n\n      if (\n        QrScanner._disableBarcodeDetector &&\n        !(this._qrEngine instanceof Worker)\n      ) {\n        // replace the disabled BarcodeDetector\n        this._qrEngine = QrScanner.createQrEngine();\n      }\n\n      if (result) {\n        if (this._onDecode) {\n          this._onDecode(result);\n        } else if (this._legacyOnDecode) {\n          this._legacyOnDecode(result.data);\n        }\n\n        if (this.$codeOutlineHighlight) {\n          clearTimeout(this._codeOutlineHighlightRemovalTimeout);\n          this._codeOutlineHighlightRemovalTimeout = undefined;\n          this.$codeOutlineHighlight.setAttribute(\n            \"viewBox\",\n            `${this._scanRegion.x || 0} ` +\n              `${this._scanRegion.y || 0} ` +\n              `${this._scanRegion.width || this.$video.videoWidth} ` +\n              `${this._scanRegion.height || this.$video.videoHeight}`,\n          );\n          const polygon = this.$codeOutlineHighlight.firstElementChild!;\n          polygon.setAttribute(\n            \"points\",\n            result.cornerPoints.map(({ x, y }) => `${x},${y}`).join(\" \"),\n          );\n          this.$codeOutlineHighlight.style.display = \"\";\n        }\n      } else if (\n        this.$codeOutlineHighlight &&\n        !this._codeOutlineHighlightRemovalTimeout\n      ) {\n        // hide after timeout to make it flash less when on some frames the QR code is detected and on some not\n        this._codeOutlineHighlightRemovalTimeout = setTimeout(\n          () => (this.$codeOutlineHighlight!.style.display = \"none\"),\n          100,\n        );\n      }\n\n      this._scanFrame();\n    });\n  }\n\n  private _onDecodeError(error: Error | string): void {\n    // default error handler; can be overwritten in the constructor\n    if (error === QrScanner.NO_QR_CODE_FOUND) return;\n    console.log(error);\n  }\n\n  private async _getCameraStream(): Promise<{\n    stream: MediaStream;\n    facingMode: QrScanner.FacingMode;\n  }> {\n    if (!navigator.mediaDevices) throw \"Camera not found.\";\n\n    const preferenceType = /^(environment|user)$/.test(this._preferredCamera)\n      ? \"facingMode\"\n      : \"deviceId\";\n    const constraintsWithoutCamera: Array<MediaTrackConstraints> = [\n      {\n        width: { min: 1024 },\n      },\n      {\n        width: { min: 768 },\n      },\n      {},\n    ];\n    const constraintsWithCamera = constraintsWithoutCamera.map((constraint) =>\n      Object.assign({}, constraint, {\n        [preferenceType]: { exact: this._preferredCamera },\n      }),\n    );\n\n    for (const constraints of [\n      ...constraintsWithCamera,\n      ...constraintsWithoutCamera,\n    ]) {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: constraints,\n          audio: false,\n        });\n        // Try to determine the facing mode from the stream, otherwise use a guess or 'environment' as\n        // default. Note that the guess is not always accurate as Safari returns cameras of different facing\n        // mode, even for exact facingMode constraints.\n        const facingMode =\n          this._getFacingMode(stream) ||\n          (constraints.facingMode\n            ? (this._preferredCamera as QrScanner.FacingMode) // a facing mode we were able to fulfill\n            : this._preferredCamera === \"environment\"\n              ? \"user\" // switch as _preferredCamera was environment but we are not able to fulfill it\n              : \"environment\"); // switch from unfulfilled user facingMode or default to environment\n        return { stream, facingMode };\n      } catch (e) {}\n    }\n\n    throw \"Camera not found.\";\n  }\n\n  private async _restartVideoStream(): Promise<void> {\n    // Note that we always pause the stream and not only if !this._paused as even if this._paused === true, the\n    // stream might still be running, as it's by default only stopped after a delay of 300ms.\n    const wasPaused = this._paused;\n    const paused = await this.pause(true);\n    if (!paused || wasPaused || !this._active) return;\n    await this.start();\n  }\n\n  private static _stopVideoStream(stream: MediaStream): void {\n    for (const track of stream.getTracks()) {\n      track.stop(); //  note that this will also automatically turn the flashlight off\n      stream.removeTrack(track);\n    }\n  }\n\n  private _setVideoMirror(facingMode: QrScanner.FacingMode): void {\n    // in user facing mode mirror the video to make it easier for the user to position the QR code\n    const scaleFactor = facingMode === \"user\" ? -1 : 1;\n    this.$video.style.transform = \"scaleX(\" + scaleFactor + \")\";\n  }\n\n  private _getFacingMode(\n    videoStream: MediaStream,\n  ): QrScanner.FacingMode | null {\n    const videoTrack = videoStream.getVideoTracks()[0];\n    if (!videoTrack) return null; // unknown\n    // inspired by https://github.com/JodusNodus/react-qr-reader/blob/master/src/getDeviceId.js#L13\n    return /rear|back|environment/i.test(videoTrack.label)\n      ? \"environment\"\n      : /front|user|face/i.test(videoTrack.label)\n        ? \"user\"\n        : null; // unknown\n  }\n\n  private static _drawToCanvas(\n    image:\n      | HTMLImageElement\n      | HTMLVideoElement\n      | HTMLCanvasElement\n      | OffscreenCanvas\n      | ImageBitmap\n      | SVGImageElement,\n    scanRegion?: QrScanner.ScanRegion | null,\n    canvas?: HTMLCanvasElement | null,\n    disallowCanvasResizing = false,\n  ): [HTMLCanvasElement, CanvasRenderingContext2D] {\n    canvas = canvas || document.createElement(\"canvas\");\n    const scanRegionX = scanRegion && scanRegion.x ? scanRegion.x : 0;\n    const scanRegionY = scanRegion && scanRegion.y ? scanRegion.y : 0;\n    const scanRegionWidth =\n      scanRegion && scanRegion.width\n        ? scanRegion.width\n        : (image as HTMLVideoElement).videoWidth || (image.width as number);\n    const scanRegionHeight =\n      scanRegion && scanRegion.height\n        ? scanRegion.height\n        : (image as HTMLVideoElement).videoHeight || (image.height as number);\n\n    if (!disallowCanvasResizing) {\n      const canvasWidth =\n        scanRegion && scanRegion.downScaledWidth\n          ? scanRegion.downScaledWidth\n          : scanRegionWidth;\n      const canvasHeight =\n        scanRegion && scanRegion.downScaledHeight\n          ? scanRegion.downScaledHeight\n          : scanRegionHeight;\n      // Setting the canvas width or height clears the canvas, even if the values didn't change, therefore only\n      // set them if they actually changed.\n      if (canvas.width !== canvasWidth) {\n        canvas.width = canvasWidth;\n      }\n      if (canvas.height !== canvasHeight) {\n        canvas.height = canvasHeight;\n      }\n    }\n\n    const context = canvas.getContext(\"2d\", { alpha: false })!;\n    context.imageSmoothingEnabled = false; // gives less blurry images\n    context.drawImage(\n      image,\n      scanRegionX,\n      scanRegionY,\n      scanRegionWidth,\n      scanRegionHeight,\n      0,\n      0,\n      canvas.width,\n      canvas.height,\n    );\n    return [canvas, context];\n  }\n\n  private static async _loadImage(\n    imageOrFileOrBlobOrUrl:\n      | HTMLImageElement\n      | HTMLVideoElement\n      | HTMLCanvasElement\n      | OffscreenCanvas\n      | ImageBitmap\n      | SVGImageElement\n      | File\n      | Blob\n      | URL\n      | String,\n  ): Promise<\n    | HTMLImageElement\n    | HTMLVideoElement\n    | HTMLCanvasElement\n    | OffscreenCanvas\n    | ImageBitmap\n    | SVGImageElement\n  > {\n    if (imageOrFileOrBlobOrUrl instanceof Image) {\n      await QrScanner._awaitImageLoad(imageOrFileOrBlobOrUrl);\n      return imageOrFileOrBlobOrUrl;\n    } else if (\n      imageOrFileOrBlobOrUrl instanceof HTMLVideoElement ||\n      imageOrFileOrBlobOrUrl instanceof HTMLCanvasElement ||\n      imageOrFileOrBlobOrUrl instanceof SVGImageElement ||\n      (\"OffscreenCanvas\" in window &&\n        imageOrFileOrBlobOrUrl instanceof OffscreenCanvas) ||\n      (\"ImageBitmap\" in window && imageOrFileOrBlobOrUrl instanceof ImageBitmap)\n    ) {\n      return imageOrFileOrBlobOrUrl;\n    } else if (\n      imageOrFileOrBlobOrUrl instanceof File ||\n      imageOrFileOrBlobOrUrl instanceof Blob ||\n      imageOrFileOrBlobOrUrl instanceof URL ||\n      typeof imageOrFileOrBlobOrUrl === \"string\"\n    ) {\n      const image = new Image();\n      if (\n        imageOrFileOrBlobOrUrl instanceof File ||\n        imageOrFileOrBlobOrUrl instanceof Blob\n      ) {\n        image.src = URL.createObjectURL(imageOrFileOrBlobOrUrl);\n      } else {\n        image.src = imageOrFileOrBlobOrUrl.toString();\n      }\n      try {\n        await QrScanner._awaitImageLoad(image);\n        return image;\n      } finally {\n        if (\n          imageOrFileOrBlobOrUrl instanceof File ||\n          imageOrFileOrBlobOrUrl instanceof Blob\n        ) {\n          URL.revokeObjectURL(image.src);\n        }\n      }\n    } else {\n      throw \"Unsupported image type.\";\n    }\n  }\n\n  private static async _awaitImageLoad(image: HTMLImageElement): Promise<void> {\n    if (image.complete && image.naturalWidth !== 0) return; // already loaded\n    await new Promise<void>((resolve, reject) => {\n      const listener = (event: ErrorEvent | Event) => {\n        image.removeEventListener(\"load\", listener);\n        image.removeEventListener(\"error\", listener);\n        if (event instanceof ErrorEvent) {\n          reject(\"Image load error\");\n        } else {\n          resolve();\n        }\n      };\n      image.addEventListener(\"load\", listener);\n      image.addEventListener(\"error\", listener);\n    });\n  }\n\n  private static _postWorkerMessage(\n    qrEngineOrQrEnginePromise: Worker,\n    type: string,\n    data?: any,\n    transfer?: Transferable[],\n  ): number {\n    return QrScanner._postWorkerMessageSync(\n      qrEngineOrQrEnginePromise,\n      type,\n      data,\n      transfer,\n    );\n  }\n\n  // sync version of _postWorkerMessage without performance overhead of async functions\n  private static _postWorkerMessageSync(\n    qrEngine: Worker,\n    type: string,\n    data?: any,\n    transfer?: Transferable[],\n  ): number {\n    const id = QrScanner._workerMessageId++;\n    qrEngine.postMessage(\n      {\n        id,\n        type,\n        data,\n      },\n      transfer,\n    );\n    return id;\n  }\n}\n\ndeclare namespace QrScanner {\n  export interface ScanRegion {\n    x?: number;\n    y?: number;\n    width?: number;\n    height?: number;\n    downScaledWidth?: number;\n    downScaledHeight?: number;\n  }\n\n  export type FacingMode = \"environment\" | \"user\";\n  export type DeviceId = string;\n\n  export interface Camera {\n    id: DeviceId;\n    label: string;\n  }\n\n  export type InversionMode = \"original\" | \"invert\" | \"both\";\n\n  export interface Point {\n    x: number;\n    y: number;\n  }\n\n  export interface ScanResult {\n    data: string;\n    // In clockwise order, starting at top left, but this might not be guaranteed in the future.\n    cornerPoints: QrScanner.Point[];\n    cornerPointsOrig: QrScanner.Point[];\n    scannedFrame?: Blob;\n    version: number;\n    matrix: BitMatrix;\n    matrixCorrected: BitMatrix;\n    ecLevel: number;\n    dataMask: number;\n  }\n}\n\n// simplified from https://wicg.github.io/shape-detection-api/#barcode-detection-api\ndeclare class BarcodeDetector {\n  constructor(options?: { formats: string[] });\n  static getSupportedFormats(): Promise<string[]>;\n  detect(\n    image: ImageBitmapSource,\n  ): Promise<Array<{ rawValue: string; cornerPoints: QrScanner.Point[] }>>;\n}\n\n// simplified from https://github.com/lukewarlow/user-agent-data-types/blob/master/index.d.ts\ndeclare global {\n  interface Navigator {\n    readonly userAgentData?: {\n      readonly platform: string;\n      readonly brands: Array<{\n        readonly brand: string;\n        readonly version: string;\n      }>;\n      getHighEntropyValues(hints: string[]): Promise<{\n        readonly architecture?: string;\n        readonly platformVersion?: string;\n      }>;\n    };\n  }\n}\n\nexport default QrScanner;\n"],"names":[],"mappings":";;;;AAgBA,IAAI,iBAAiB,GACnB,aAAa,CAAC;AAChB,IAAI,gBAAgB,GAAqB;AACvC,IAAA,GAAG,EAAE,EAAE;AACP,IAAA,KAAK,EAAE,GAAG;AACV,IAAA,IAAI,EAAE,EAAE;AACR,IAAA,uBAAuB,EAAE,IAAI;CAC9B,CAAC;AAEF,MAAM,SAAS,CAAA;;IAOb,WAAW,WAAW,CAAC,UAAkB,EAAA;QACvC,OAAO,CAAC,IAAI,CACV,2EAA2E;AACzE,YAAA,uDAAuD,CAC1D,CAAC;KACH;IAED,aAAa,SAAS,GAAA;AACpB,QAAA,IAAI;AACF,YAAA,OAAO,CAAC,CAAC,CAAC,MAAM,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC;SACtD;QAAC,OAAO,CAAC,EAAE;AACV,YAAA,OAAO,KAAK,CAAC;SACd;KACF;AAED,IAAA,aAAa,WAAW,CACtB,aAAa,GAAG,KAAK,EAAA;QAErB,IAAI,CAAC,SAAS,CAAC,YAAY;AAAE,YAAA,OAAO,EAAE,CAAC;AAEvC,QAAA,MAAM,gBAAgB,GAAG,YACvB,CAAC,MAAM,SAAS,CAAC,YAAY,CAAC,gBAAgB,EAAE,EAAE,MAAM,CACtD,CAAC,MAAM,KAAK,MAAM,CAAC,IAAI,KAAK,YAAY,CACzC,CAAC;;;;;AAMJ,QAAA,IAAI,YAAqC,CAAC;AAC1C,QAAA,IAAI;AACF,YAAA,IACE,aAAa;AACb,gBAAA,CAAC,MAAM,gBAAgB,EAAE,EAAE,KAAK,CAAC,CAAC,MAAM,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,EAC3D;AACA,gBAAA,YAAY,GAAG,MAAM,SAAS,CAAC,YAAY,CAAC,YAAY,CAAC;AACvD,oBAAA,KAAK,EAAE,KAAK;AACZ,oBAAA,KAAK,EAAE,IAAI;AACZ,iBAAA,CAAC,CAAC;aACJ;SACF;QAAC,OAAO,CAAC,EAAE;;;SAGX;AAED,QAAA,IAAI;AACF,YAAA,OAAO,CAAC,MAAM,gBAAgB,EAAE,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,MAAM;gBACpD,EAAE,EAAE,MAAM,CAAC,QAAQ;gBACnB,KAAK,EAAE,MAAM,CAAC,KAAK,KAAK,CAAC,KAAK,CAAC,GAAG,gBAAgB,GAAG,UAAU,CAAC,GAAG,CAAC,CAAA,CAAE,CAAC;AACxE,aAAA,CAAC,CAAC,CAAC;SACL;gBAAS;;YAER,IAAI,YAAY,EAAE;gBAChB,OAAO,CAAC,IAAI,CACV,8EAA8E;AAC5E,oBAAA,0BAA0B,CAC7B,CAAC;AACF,gBAAA,SAAS,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;aAC1C;SACF;KACF;IA0DD,WACE,CAAA,KAAuB,EACvB,QAE8B,EAC9B,kCAeK,EACL,+BAEuD,EACvD,eAA2D,EAAA;AA1E5C,QAAA,IAAA,CAAA,iBAAiB,GAAW,SAAS,CAAC,mBAAmB,CAAC;QACnE,IAAgB,CAAA,gBAAA,GACtB,aAAa,CAAC;QACC,IAAkB,CAAA,kBAAA,GAAW,EAAE,CAAC;QACzC,IAAkB,CAAA,kBAAA,GAAW,CAAC,CAAC,CAAC;QAIhC,IAAO,CAAA,OAAA,GAAY,KAAK,CAAC;QACzB,IAAO,CAAA,OAAA,GAAY,KAAK,CAAC;QACzB,IAAQ,CAAA,QAAA,GAAY,KAAK,CAAC;QAC1B,IAAU,CAAA,UAAA,GAAY,KAAK,CAAC;AAiElC,QAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AAEhD,QAAA,IACE,kCAAkC;AAClC,YAAA,OAAO,kCAAkC,KAAK,QAAQ,EACtD;;AAEA,YAAA,IAAI,CAAC,SAAS,GAAG,QAAkC,CAAC;SACrD;aAAM;AACL,YAAA,IACE,kCAAkC;gBAClC,+BAA+B;AAC/B,gBAAA,eAAe,EACf;gBACA,OAAO,CAAC,IAAI,CACV,0FAA0F;AACxF,oBAAA,YAAY,CACf,CAAC;aACH;iBAAM;;;;;;gBAML,OAAO,CAAC,IAAI,CACV,sFAAsF;AACpF,oBAAA,sFAAsF,CACzF,CAAC;aACH;AACD,YAAA,IAAI,CAAC,eAAe,GAAG,QAAwC,CAAC;SACjE;AAED,QAAA,MAAM,OAAO,GACX,OAAO,kCAAkC,KAAK,QAAQ;AACpD,cAAE,kCAAkC;cAClC,EAAE,CAAC;AACT,QAAA,IAAI,CAAC,cAAc;AACjB,YAAA,OAAO,CAAC,aAAa;iBACpB,OAAO,kCAAkC,KAAK,UAAU;AACvD,sBAAE,kCAAkC;AACpC,sBAAE,IAAI,CAAC,cAAc,CAAC,CAAC;AAC3B,QAAA,IAAI,CAAC,oBAAoB;AACvB,YAAA,OAAO,CAAC,mBAAmB;iBAC1B,OAAO,+BAA+B,KAAK,UAAU;AACpD,sBAAE,+BAA+B;AACjC,sBAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;AACjC,QAAA,IAAI,CAAC,gBAAgB;YACnB,OAAO,CAAC,eAAe,IAAI,eAAe,IAAI,IAAI,CAAC,gBAAgB,CAAC;AACtE,QAAA,IAAI,CAAC,iBAAiB;YACpB,OAAO,kCAAkC,KAAK,QAAQ;AACpD,kBAAE,kCAAkC;AACpC,kBAAE,OAAO,+BAA+B,KAAK,QAAQ;AACnD,sBAAE,+BAA+B;AACjC,sBAAE,IAAI,CAAC,iBAAiB,CAAC;AAC/B,QAAA,IAAI,CAAC,kBAAkB;AACrB,YAAA,OAAO,CAAC,iBAAiB,IAAI,IAAI,CAAC,kBAAkB,CAAC;QAEvD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3D,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/D,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AAGrD,QAAA,KAAK,CAAC,uBAAuB,GAAG,IAAI,CAAC;;;;AAIrC,QAAA,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;;;AAGzB,QAAA,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;;;QAInB,IAAI,eAAe,GAAG,KAAK,CAAC;AAC5B,QAAA,IAAI,KAAK,CAAC,MAAM,EAAE;AAChB,YAAA,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;YACrB,eAAe,GAAG,IAAI,CAAC;SACxB;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;AAClC,YAAA,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YACjC,eAAe,GAAG,IAAI,CAAC;SACxB;AACD,QAAA,MAAM,cAAc,GAAG,KAAK,CAAC,aAAc,CAAC;QAE5C,IAAI,OAAO,CAAC,mBAAmB,IAAI,OAAO,CAAC,oBAAoB,EAAE;AAC/D,YAAA,MAAM,kBAAkB,GAAG,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC;AAC7C,YAAA,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,OAAO,IAAI,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AACjE,YAAA,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;AACzC,YAAA,YAAY,CAAC,QAAQ,GAAG,UAAU,CAAC;AACnC,YAAA,YAAY,CAAC,OAAO,GAAG,MAAM,CAAC;AAC9B,YAAA,YAAY,CAAC,aAAa,GAAG,MAAM,CAAC;YACpC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;AACrD,YAAA,IAAI,CAAC,kBAAkB,IAAI,OAAO,CAAC,mBAAmB,EAAE;;;gBAGtD,IAAI,CAAC,QAAQ,CAAC,SAAS;oBACrB,+DAA+D;wBAC/D,0FAA0F;wBAC1F,sFAAsF;wBACtF,+FAA+F;AAC/F,wBAAA,iCAAiC,CAAC;AACpC,gBAAA,IAAI;AACF,oBAAA,IAAI,CAAC,QAAQ,CAAC,iBAAkB,CAAC,OAAO,CACtC,EAAE,SAAS,EAAE,CAAC,YAAY,EAAE,aAAa,CAAC,EAAE,EAC5C;AACE,wBAAA,QAAQ,EAAE,GAAG;AACb,wBAAA,UAAU,EAAE,QAAQ;AACpB,wBAAA,SAAS,EAAE,WAAW;AACtB,wBAAA,MAAM,EAAE,aAAa;AACtB,qBAAA,CACF,CAAC;iBACH;AAAC,gBAAA,OAAO,CAAC,EAAE,GAAE;AACd,gBAAA,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;aACrE;AACD,YAAA,IAAI,OAAO,CAAC,oBAAoB,EAAE;;AAEhC,gBAAA,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAC9B,WAAW,EACX,gGAAgG;oBAC9F,0EAA0E;AAC1E,oBAAA,8DAA8D,CACjE,CAAC;AACF,gBAAA,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,QAAQ;AACvC,qBAAA,gBAAiC,CAAC;aACtC;SACF;QACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;QAEpD,qBAAqB,CAAC,MAAK;;YAEzB,MAAM,UAAU,GAAG,MAAM,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;AAClD,YAAA,IAAI,UAAU,CAAC,OAAO,KAAK,MAAM,EAAE;gBACjC,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC;gBACzD,eAAe,GAAG,IAAI,CAAC;aACxB;AACD,YAAA,IAAI,UAAU,CAAC,UAAU,KAAK,SAAS,EAAE;gBACvC,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,YAAY,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;gBAC9D,eAAe,GAAG,IAAI,CAAC;aACxB;YACD,IAAI,eAAe,EAAE;;AAEnB,gBAAA,OAAO,CAAC,IAAI,CACV,yFAAyF,CAC1F,CAAC;AACF,gBAAA,KAAK,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;AAC1B,gBAAA,KAAK,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC;AACxB,gBAAA,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC;gBACzB,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE;oBAChD,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBACxD;;gBAED,OAAO,IAAI,CAAC,QAAS,CAAC;;gBAEtB,OAAO,IAAI,CAAC,qBAAsB,CAAC;aACpC;AAED,YAAA,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,CAAC,cAAc,EAAE,CAAC;aACvB;AACH,SAAC,CAAC,CAAC;QAEH,KAAK,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAC7C,KAAK,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACjE,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;QACxE,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;AAEvD,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,cAAc,EAAE,CAAC;KAC7C;AAED,IAAA,MAAM,QAAQ,GAAA;AACZ,QAAA,IAAI,MAA+B,CAAC;AACpC,QAAA,IAAI;AACF,YAAA,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;gBACzB,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,YAAY,WAAW,CAAC;oBAAE,OAAO,KAAK,CAAC;AAClE,gBAAA,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;aAChC;iBAAM;gBACL,MAAM,GAAG,CAAC,MAAM,IAAI,CAAC,gBAAgB,EAAE,EAAE,MAAM,CAAC;aACjD;AACD,YAAA,OAAO,OAAO,IAAI,MAAM,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;SAC5D;QAAC,OAAO,CAAC,EAAE;AACV,YAAA,OAAO,KAAK,CAAC;SACd;gBAAS;;YAER,IAAI,MAAM,IAAI,MAAM,KAAK,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;gBAC9C,OAAO,CAAC,IAAI,CACV,0EAA0E;AACxE,oBAAA,0BAA0B,CAC7B,CAAC;AACF,gBAAA,SAAS,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;aACpC;SACF;KACF;IAED,SAAS,GAAA;QACP,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;AAED,IAAA,MAAM,WAAW,GAAA;AACf,QAAA,IAAI,IAAI,CAAC,QAAQ,EAAE;AACjB,YAAA,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC;SAC3B;aAAM;AACL,YAAA,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC;SAC1B;KACF;AAED,IAAA,MAAM,WAAW,GAAA;AACf,QAAA,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,UAAU;YAAE,OAAO;AAC7C,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACrB,QAAA,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO;AAAE,YAAA,OAAO;AAC1C,QAAA,IAAI;AACF,YAAA,IAAI,EAAE,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC;AAAE,gBAAA,MAAM,oBAAoB,CAAC;;AAEzD,YAAA,MAAO,IAAI,CAAC,MAAM,CAAC,SAAyB;iBACzC,cAAc,EAAE,CAAC,CAAC,CAAC;AACnB,iBAAA,gBAAgB,CAAC;;AAEhB,gBAAA,QAAQ,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;AAC5B,aAAA,CAAC,CAAC;SACN;QAAC,OAAO,CAAC,EAAE;AACV,YAAA,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AACtB,YAAA,MAAM,CAAC,CAAC;SACT;KACF;AAED,IAAA,MAAM,YAAY,GAAA;QAChB,IAAI,CAAC,IAAI,CAAC,QAAQ;YAAE,OAAO;;;;AAI3B,QAAA,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AACtB,QAAA,MAAM,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAClC;IAED,OAAO,GAAA;QACL,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,gBAAgB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC1E,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACtD,QAAQ,CAAC,mBAAmB,CAAC,kBAAkB,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAC3E,MAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;AAE1D,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACvB,QAAA,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AACtB,QAAA,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,SAAS,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;KACvD;AAED,IAAA,MAAM,KAAK,GAAA;QACT,IAAI,IAAI,CAAC,UAAU;AACjB,YAAA,MAAM,IAAI,KAAK,CACb,6DAA6D,CAC9D,CAAC;AACJ,QAAA,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO;YAAE,OAAO;QAE1C,IAAI,MAAM,CAAC,QAAQ,CAAC,QAAQ,KAAK,QAAQ,EAAE;;AAEzC,YAAA,OAAO,CAAC,IAAI,CACV,4EAA4E,CAC7E,CAAC;SACH;AAED,QAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,QAAQ,CAAC,MAAM;AAAE,YAAA,OAAO;AAC5B,QAAA,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AACrB,QAAA,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;;AAEzB,YAAA,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YACzB,OAAO;SACR;AAED,QAAA,IAAI;YACF,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,MAAM,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAC7D,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,EAAE;;AAEjC,gBAAA,SAAS,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;gBACnC,OAAO;aACR;AACD,YAAA,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;AACjC,YAAA,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC;AAC/B,YAAA,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;;AAGzB,YAAA,IAAI,IAAI,CAAC,QAAQ,EAAE;AACjB,gBAAA,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,IAAI,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,MAAK,GAAG,CAAC,CAAC;aACpC;SACF;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,IAAI,CAAC,OAAO;gBAAE,OAAO;AACzB,YAAA,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AACrB,YAAA,MAAM,CAAC,CAAC;SACT;KACF;IAED,IAAI,GAAA;QACF,IAAI,CAAC,KAAK,EAAE,CAAC;AACb,QAAA,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;KACtB;AAED,IAAA,MAAM,KAAK,CAAC,qBAAqB,GAAG,KAAK,EAAA;AACvC,QAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,IAAI,CAAC,OAAO;AAAE,YAAA,OAAO,IAAI,CAAC;AAC/B,QAAA,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;AAEpB,QAAA,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;SACtC;QAED,MAAM,UAAU,GAAG,MAAK;YACtB,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,YAAY,WAAW,EAAE;;gBAEhD,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AAClD,gBAAA,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;aAC9B;AACH,SAAC,CAAC;QAEF,IAAI,qBAAqB,EAAE;AACzB,YAAA,UAAU,EAAE,CAAC;AACb,YAAA,OAAO,IAAI,CAAC;SACb;AAED,QAAA,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,KAAK,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;QACzD,IAAI,CAAC,IAAI,CAAC,OAAO;AAAE,YAAA,OAAO,KAAK,CAAC;AAChC,QAAA,UAAU,EAAE,CAAC;AACb,QAAA,OAAO,IAAI,CAAC;KACb;IAED,MAAM,SAAS,CACb,oBAA+D,EAAA;AAE/D,QAAA,IAAI,oBAAoB,KAAK,IAAI,CAAC,gBAAgB;YAAE,OAAO;AAC3D,QAAA,IAAI,CAAC,gBAAgB,GAAG,oBAAoB,CAAC;;AAE7C,QAAA,MAAM,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAClC;AA+CD,IAAA,aAAa,SAAS,CACpB,sBAUU,EACV,mBAWQ,EACR,QAAwB,EACxB,MAAiC,EACjC,yBAAkC,KAAK,EACvC,2BAAoC,KAAK,EAAA;AAEzC,QAAA,IAAI,UAAmD,CAAC;QACxD,IAAI,wBAAwB,GAAG,KAAK,CAAC;AACrC,QAAA,IACE,mBAAmB;aAClB,YAAY,IAAI,mBAAmB;AAClC,gBAAA,UAAU,IAAI,mBAAmB;AACjC,gBAAA,QAAQ,IAAI,mBAAmB;AAC/B,gBAAA,wBAAwB,IAAI,mBAAmB;AAC/C,gBAAA,0BAA0B,IAAI,mBAAmB;AACjD,gBAAA,0BAA0B,IAAI,mBAAmB,CAAC,EACpD;;AAEA,YAAA,UAAU,GAAG,mBAAmB,CAAC,UAAU,CAAC;AAC5C,YAAA,QAAQ,GAAG,mBAAmB,CAAC,QAAQ,CAAC;AACxC,YAAA,MAAM,GAAG,mBAAmB,CAAC,MAAM,CAAC;YACpC,sBAAsB;AACpB,gBAAA,mBAAmB,CAAC,sBAAsB,IAAI,KAAK,CAAC;YACtD,wBAAwB;AACtB,gBAAA,mBAAmB,CAAC,wBAAwB,IAAI,KAAK,CAAC;YACxD,wBAAwB,GAAG,IAAI,CAAC;SACjC;AAAM,aAAA,IACL,mBAAmB;YACnB,QAAQ;YACR,MAAM;YACN,sBAAsB;AACtB,YAAA,wBAAwB,EACxB;AACA,YAAA,OAAO,CAAC,IAAI,CACV,kFAAkF,CACnF,CAAC;SACH;aAAM;;;;;;YAML,OAAO,CAAC,IAAI,CACV,6FAA6F;AAC3F,gBAAA,6DAA6D,CAChE,CAAC;SACH;AAED,QAAA,IAAI;AACF,YAAA,IAAI,KAMe,CAAC;AACpB,YAAA,IAAI,aAAuC,CAAC;YAE5C,KAAK,GAAG,MAAM,SAAS,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC;AAC3D,YAAA,CAAC,MAAM,EAAE,aAAa,CAAC,GAAG,SAAS,CAAC,aAAa,CAC/C,KAAK,EACL,UAAU,EACV,MAAM,EACN,sBAAsB,CACvB,CAAC;AACF,YAAA,IAAI,kBAAwC,CAAC;;;;;;YAO7C,IAAI,QAAQ,EAAE;gBACZ,kBAAkB,GAAG,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;AACzD,oBAAA,IAAI,OAAe,CAAC;AACpB,oBAAA,IAAI,SAAwC,CAAC;AAC7C,oBAAA,IAAI,OAA6C,CAAC;AAClD,oBAAA,IAAI,kBAAkB,GAAG,CAAC,CAAC,CAAC;AAC5B,oBAAA,SAAS,GAAG,CAAC,KAAmB,KAAI;wBAClC,IAAI,KAAK,CAAC,IAAI,CAAC,EAAE,KAAK,kBAAkB,EAAE;4BACxC,OAAO;yBACR;AACD,wBAAA,QAAS,CAAC,mBAAmB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;AACpD,wBAAA,QAAS,CAAC,mBAAmB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;wBAChD,YAAY,CAAC,OAAO,CAAC,CAAC;wBACtB,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;AAC5B,4BAAA,MAAM,IAAI,GAAG,KAAK,CAAC,IAAoB,CAAC;AACxC,4BAAA,MAAM,GAAG,GAAyB;gCAChC,IAAI,EAAE,IAAI,CAAC,IAAK;gCAChB,gBAAgB,EAAE,IAAI,CAAC,YAAa;gCACpC,YAAY,EAAE,SAAS,CAAC,cAAc,CACpC,IAAI,CAAC,YAAa,EAClB,UAAU,CACX;gCACD,OAAO,EAAE,IAAI,CAAC,OAAQ;AACtB,gCAAA,MAAM,EAAE,SAAS,CAAC,gBAAgB,CAChC,IAAI,CAAC,UAAW,EAChB,IAAI,CAAC,WAAY,EACjB,IAAI,CAAC,WAAY,CAClB;AACD,gCAAA,eAAe,EAAE,SAAS,CAAC,gBAAgB,CACzC,IAAI,CAAC,mBAAoB,EACzB,IAAI,CAAC,WAAY,EACjB,IAAI,CAAC,WAAY,CAClB;gCACD,OAAO,EAAE,IAAI,CAAC,OAAQ;gCACtB,QAAQ,EAAE,IAAI,CAAC,QAAS;6BACzB,CAAC;AAEF,4BAAA,IAAI,sBAAsB,YAAY,gBAAgB,EAAE;AACtD,gCAAA,MAAO,CAAC,MAAM,CAAC,CAAC,IAAI,KAAI;oCACtB,IAAI,IAAI,EAAE;AACR,wCAAA,OAAO,iCAAM,GAAG,CAAA,EAAA,EAAE,YAAY,EAAE,IAAI,IAAG,CAAC;qCACzC;yCAAM;wCACL,OAAO,CAAC,GAAG,CAAC,CAAC;qCACd;AACH,iCAAC,CAAC,CAAC;6BACJ;iCAAM;gCACL,OAAO,CAAC,GAAG,CAAC,CAAC;6BACd;yBACF;6BAAM;AACL,4BAAA,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;yBACpC;AACH,qBAAC,CAAC;AACF,oBAAA,OAAO,GAAG,CAAC,KAA0B,KAAI;AACvC,wBAAA,QAAS,CAAC,mBAAmB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;AACpD,wBAAA,QAAS,CAAC,mBAAmB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;wBAChD,YAAY,CAAC,OAAO,CAAC,CAAC;wBACtB,MAAM,YAAY,GAAG,CAAC,KAAK;AACzB,8BAAE,eAAe;AACjB,8BAAG,KAAoB,CAAC,OAAO,IAAI,KAAK,CAAC;AAC3C,wBAAA,MAAM,CAAC,iBAAiB,GAAG,YAAY,CAAC,CAAC;AAC3C,qBAAC,CAAC;AACF,oBAAA,QAAS,CAAC,gBAAgB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;AACjD,oBAAA,QAAS,CAAC,gBAAgB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AAC7C,oBAAA,OAAO,GAAG,UAAU,CAAC,MAAM,OAAO,CAAC,SAAS,CAAC,EAAE,KAAK,CAAC,CAAC;AACtD,oBAAA,MAAM,SAAS,GAAG,aAAa,CAAC,YAAY,CAC1C,CAAC,EACD,CAAC,EACD,MAAO,CAAC,KAAK,EACb,MAAO,CAAC,MAAM,CACf,CAAC;AACF,oBAAA,kBAAkB,GAAG,SAAS,CAAC,sBAAsB,CACnD,QAAS,EACT,QAAQ,EACR,SAAS,EACT,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CACxB,CAAC;AACJ,iBAAC,CAAC,CAAC;aACJ;iBAAM;;AAEL,gBAAA,IAAI,CAAC,qBAAqB,EAAE,EAAE;oBAC5B,MAAM,WAAW,EAAE,CAAC;iBACrB;AACD,gBAAA,MAAM,IAAI,GAAG,aAAa,CAAC,YAAY,CACrC,CAAC,EACD,CAAC,EACD,MAAO,CAAC,KAAK,EACb,MAAO,CAAC,MAAM,CACf,CAAC;AACF,gBAAA,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE;oBACnD,iBAAiB;oBACjB,gBAAgB;AACjB,iBAAA,CAAC,CAAC;gBACH,IAAI,CAAC,GAAG,EAAE;AACR,oBAAA,MAAM,iBAAiB,GAAG,SAAS,CAAC,gBAAgB,CAAC;iBACtD;qBAAM;AACL,oBAAA,MAAM,YAAY,GAAG;wBACnB,GAAG,CAAC,QAAQ,CAAC,aAAa;wBAC1B,GAAG,CAAC,QAAQ,CAAC,cAAc;wBAC3B,GAAG,CAAC,QAAQ,CAAC,iBAAiB;wBAC9B,GAAG,CAAC,QAAQ,CAAC,gBAAgB;qBAC9B,CAAC;AACF,oBAAA,kBAAkB,GAAG;wBACnB,IAAI,EAAE,GAAG,CAAC,IAAI;wBACd,YAAY,EAAE,SAAS,CAAC,cAAc,CAAC,YAAY,EAAE,UAAU,CAAC;AAChE,wBAAA,gBAAgB,EAAE,YAAY;wBAC9B,OAAO,EAAE,GAAG,CAAC,OAAO;wBACpB,MAAM,EAAE,GAAG,CAAC,MAAM;wBAClB,eAAe,EAAE,GAAG,CAAC,eAAe;wBACpC,OAAO,EAAE,GAAG,CAAC,OAAO;wBACpB,QAAQ,EAAE,GAAG,CAAC,QAAQ;qBACC,CAAC;iBAC3B;aACF;AACD,YAAA,OAAO,wBAAwB;AAC7B,kBAAE,kBAAkB;AACpB,kBAAE,kBAAkB,CAAC,IAAI,CAAC;SAC7B;QAAC,OAAO,CAAC,EAAE;AACV,YAAA,IAAI,CAAC,UAAU,IAAI,CAAC,wBAAwB;AAAE,gBAAA,MAAM,CAAC,CAAC;AACtD,YAAA,MAAM,kBAAkB,GAAG,MAAM,SAAS,CAAC,SAAS,CAClD,sBAAsB,EACtB,EAAE,QAAQ,EAAE,MAAM,EAAE,sBAAsB,EAAE,CAC7C,CAAC;AACF,YAAA,OAAO,wBAAwB;AAC7B,kBAAE,kBAAkB;AACpB,kBAAE,kBAAkB,CAAC,IAAI,CAAC;SAC7B;;;;;;;KAOF;IAED,mBAAmB,CACjB,GAAW,EACX,KAAa,EACb,IAAY,EACZ,0BAAmC,IAAI,EAAA;;;QAIvC,SAAS,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,kBAAkB,EAAE;YAC/D,GAAG;YACH,KAAK;YACL,IAAI;YACJ,uBAAuB;AACxB,SAAA,CAAC,CAAC;KACJ;AAED,IAAA,gBAAgB,CAAC,aAAsC,EAAA;;;QAGrD,SAAS,CAAC,kBAAkB,CAC1B,IAAI,CAAC,SAAS,EACd,eAAe,EACf,aAAa,CACd,CAAC;KACH;IAKD,OAAO,cAAc,CAAC,UAAmB,EAAA;QACvC,IAAI,UAAU,EAAE;AACd,YAAA,OAAO,CAAC,IAAI,CACV,qEAAqE,CACtE,CAAC;SACH;AAED,QAAA,OAAO,IAAI,MAAM,CAAC,IAAI,GAAG,CAAC,4BAA4B,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AACxE,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA,CAAC,CAAC;KACJ;IAEO,OAAO,GAAA;QACb,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC1D,IAAI,CAAC,cAAc,EAAE,CAAC;AACtB,QAAA,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;SAClC;QACD,IAAI,CAAC,UAAU,EAAE,CAAC;KACnB;IAEO,iBAAiB,GAAA;QACvB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC1D,IAAI,CAAC,cAAc,EAAE,CAAC;KACvB;IAEO,mBAAmB,GAAA;AACzB,QAAA,IAAI,QAAQ,CAAC,MAAM,EAAE;YACnB,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;AAAM,aAAA,IAAI,IAAI,CAAC,OAAO,EAAE;YACvB,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;KACF;AAEO,IAAA,oBAAoB,CAAC,KAAuB,EAAA;;AAElD,QAAA,MAAM,iBAAiB,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC;AACxE,QAAA,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,iBAAiB,CAAC,CAAC;QAC/D,OAAO;AACL,YAAA,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,UAAU,GAAG,cAAc,IAAI,CAAC,CAAC;AACtD,YAAA,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,WAAW,GAAG,cAAc,IAAI,CAAC,CAAC;AACvD,YAAA,KAAK,EAAE,cAAc;AACrB,YAAA,MAAM,EAAE,cAAc;YACtB,eAAe,EAAE,IAAI,CAAC,iBAAiB;YACvC,gBAAgB,EAAE,IAAI,CAAC,iBAAiB;SACzC,CAAC;KACH;IAEO,cAAc,GAAA;QACpB,qBAAqB,CAAC,MAAK;;;YAGzB,IAAI,CAAC,IAAI,CAAC,QAAQ;gBAAE,OAAO;AAC3B,YAAA,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;AAC1B,YAAA,MAAM,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;AACpC,YAAA,MAAM,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;AACtC,YAAA,MAAM,YAAY,GAAG,KAAK,CAAC,WAAW,CAAC;AACvC,YAAA,MAAM,aAAa,GAAG,KAAK,CAAC,YAAY,CAAC;AACzC,YAAA,MAAM,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC;AAClC,YAAA,MAAM,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC;YAEjC,MAAM,UAAU,GAAG,MAAM,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;AAClD,YAAA,MAAM,cAAc,GAAG,UAAU,CAAC,SAAS,CAAC;AAC5C,YAAA,MAAM,gBAAgB,GAAG,UAAU,GAAG,WAAW,CAAC;AAClD,YAAA,MAAM,kBAAkB,GAAG,YAAY,GAAG,aAAa,CAAC;AACxD,YAAA,IAAI,gBAAwB,CAAC;AAC7B,YAAA,IAAI,iBAAyB,CAAC;YAC9B,QAAQ,cAAc;AACpB,gBAAA,KAAK,MAAM;oBACT,gBAAgB,GAAG,UAAU,CAAC;oBAC9B,iBAAiB,GAAG,WAAW,CAAC;oBAChC,MAAM;AACR,gBAAA,KAAK,MAAM;oBACT,gBAAgB,GAAG,YAAY,CAAC;oBAChC,iBAAiB,GAAG,aAAa,CAAC;oBAClC,MAAM;AACR,gBAAA;oBACE,IACE,cAAc,KAAK,OAAO;0BACtB,gBAAgB,GAAG,kBAAkB;AACvC,0BAAE,gBAAgB,GAAG,kBAAkB,EACzC;;;;;;wBAMA,iBAAiB,GAAG,aAAa,CAAC;AAClC,wBAAA,gBAAgB,GAAG,iBAAiB,GAAG,gBAAgB,CAAC;qBACzD;yBAAM;wBACL,gBAAgB,GAAG,YAAY,CAAC;AAChC,wBAAA,iBAAiB,GAAG,gBAAgB,GAAG,gBAAgB,CAAC;qBACzD;AACD,oBAAA,IAAI,cAAc,KAAK,YAAY,EAAE;;wBAEnC,gBAAgB,GAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,EAAE,UAAU,CAAC,CAAC;wBAC1D,iBAAiB,GAAG,IAAI,CAAC,GAAG,CAAC,iBAAiB,EAAE,WAAW,CAAC,CAAC;qBAC9D;aACJ;;;;YAKD,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,GAAG,UAAU,CAAC,cAAc;iBAC/C,KAAK,CAAC,GAAG,CAAC;AACV,iBAAA,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,KAAI;AACjB,gBAAA,MAAM,WAAW,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;AACvC,gBAAA,OAAO,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC;AACzB,sBAAE,CAAC,CAAC,CAAC,CAAC;0BACA,YAAY,GAAG,gBAAgB;AACjC,0BAAE,aAAa,GAAG,iBAAiB;AACnC,wBAAA,WAAW;wBACX,GAAG;sBACL,WAAW,CAAC;AAClB,aAAC,CAAC,CAAC;YAEL,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,UAAU,CAAC;YACzD,MAAM,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,IAAI,WAAW,CAAC;YAC5D,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC;YACxC,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC;AAExC,YAAA,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;AACzC,YAAA,YAAY,CAAC,KAAK,GAAG,CAAA,EAAG,CAAC,WAAW,GAAG,UAAU,IAAI,gBAAgB,CAAA,EAAA,CAAI,CAAC;AAC1E,YAAA,YAAY,CAAC,MAAM,GAAG,CAAA,EAAG,CAAC,YAAY,GAAG,WAAW,IAAI,iBAAiB,CAAA,EAAA,CAAI,CAAC;AAC9E,YAAA,YAAY,CAAC,GAAG,GAAG,CAAG,EAAA,QAAQ,GAAG,MAAM,GAAG,CAAC,OAAO,GAAG,WAAW,IAAI,iBAAiB,IAAI,CAAC;AAC1F,YAAA,MAAM,eAAe,GAAG,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,SAAU,CAAC,CAAC;AACpE,YAAA,YAAY,CAAC,IAAI,GAAG,CAAA,EAClB,QAAQ;AACR,iBAAC,eAAe,GAAG,YAAY,GAAG,MAAM,GAAG,gBAAgB,GAAG,MAAM,CAAC;AACrE,gBAAA,CAAC,CAAC,eAAe,GAAG,UAAU,GAAG,OAAO,GAAG,WAAW,GAAG,OAAO;AAC9D,oBAAA,UAAU;AACV,oBAAA,gBACJ,IAAI,CAAC;;YAEL,YAAY,CAAC,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC;AACjD,SAAC,CAAC,CAAC;KACJ;AAEO,IAAA,OAAO,cAAc,CAC3B,MAAyB,EACzB,UAAwC,EAAA;AAExC,QAAA,IAAI,CAAC,UAAU;AAAE,YAAA,OAAO,MAAM,CAAC;;QAE/B,IAAI,SAAS,GAAsB,EAAE,CAAC;AACtC,QAAA,MAAM,OAAO,GAAG,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC;AAClC,QAAA,MAAM,OAAO,GAAG,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC;QAClC,MAAM,YAAY,GAChB,UAAU,CAAC,KAAK,IAAI,UAAU,CAAC,eAAe;AAC5C,cAAE,UAAU,CAAC,KAAK,GAAG,UAAU,CAAC,eAAe;cAC7C,CAAC,CAAC;QACR,MAAM,YAAY,GAChB,UAAU,CAAC,MAAM,IAAI,UAAU,CAAC,gBAAgB;AAC9C,cAAE,UAAU,CAAC,MAAM,GAAG,UAAU,CAAC,gBAAgB;cAC/C,CAAC,CAAC;AACR,QAAA,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;AAC1B,YAAA,SAAS,GAAG;AACV,gBAAA,GAAG,SAAS;AACZ,gBAAA;AACE,oBAAA,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,YAAY,GAAG,OAAO;AACnC,oBAAA,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,YAAY,GAAG,OAAO;AACpC,iBAAA;aACF,CAAC;SACH;AACD,QAAA,OAAO,SAAS,CAAC;KAClB;IAEO,UAAU,GAAA;AAChB,QAAA,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK;YAAE,OAAO;;;;;AAKrE,QAAA,MAAM,YAAY,GAChB,2BAA2B,IAAI,IAAI,CAAC,MAAM;AACxC;gBACE,IAAI,CAAC,MAAM,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;cACvD,qBAAqB,CAAC;QAC5B,YAAY,CAAC,YAAW;YACtB,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,CAAC,EAAE;;;;;gBAK/B,IAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,OAAO;aACR;YAED,MAAM,iBAAiB,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,kBAAkB,CAAC;AAC/D,YAAA,MAAM,uBAAuB,GAAG,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC;AAC/D,YAAA,IAAI,iBAAiB,GAAG,uBAAuB,EAAE;AAC/C,gBAAA,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,KACxB,UAAU,CAAC,OAAO,EAAE,uBAAuB,GAAG,iBAAiB,CAAC,CACjE,CAAC;aACH;;AAED,YAAA,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAErC,YAAA,IAAI,MAAwC,CAAC;AAC7C,YAAA,IAAI;gBACF,MAAM,GAAG,MAAM,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE;oBAC9C,UAAU,EAAE,IAAI,CAAC,WAAW;oBAC5B,QAAQ,EAAE,IAAI,CAAC,SAAS;oBACxB,MAAM,EAAE,IAAI,CAAC,OAAO;AACrB,iBAAA,CAAC,CAAC;aACJ;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,CAAC,IAAI,CAAC,OAAO;oBAAE,OAAO;AAC1B,gBAAA,IAAI,CAAC,cAAc,CAAC,KAAuB,CAAC,CAAC;aAC9C;YAED,IACE,SAAS,CAAC,uBAAuB;gBACjC,EAAE,IAAI,CAAC,SAAS,YAAY,MAAM,CAAC,EACnC;;AAEA,gBAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,cAAc,EAAE,CAAC;aAC7C;YAED,IAAI,MAAM,EAAE;AACV,gBAAA,IAAI,IAAI,CAAC,SAAS,EAAE;AAClB,oBAAA,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;iBACxB;AAAM,qBAAA,IAAI,IAAI,CAAC,eAAe,EAAE;AAC/B,oBAAA,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;iBACnC;AAED,gBAAA,IAAI,IAAI,CAAC,qBAAqB,EAAE;AAC9B,oBAAA,YAAY,CAAC,IAAI,CAAC,mCAAmC,CAAC,CAAC;AACvD,oBAAA,IAAI,CAAC,mCAAmC,GAAG,SAAS,CAAC;AACrD,oBAAA,IAAI,CAAC,qBAAqB,CAAC,YAAY,CACrC,SAAS,EACT,CAAG,EAAA,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAG,CAAA,CAAA;AAC3B,wBAAA,CAAA,EAAG,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAG,CAAA,CAAA;wBAC7B,CAAG,EAAA,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,CAAG,CAAA,CAAA;AACtD,wBAAA,CAAA,EAAG,IAAI,CAAC,WAAW,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,CAAA,CAAE,CAC1D,CAAC;AACF,oBAAA,MAAM,OAAO,GAAG,IAAI,CAAC,qBAAqB,CAAC,iBAAkB,CAAC;AAC9D,oBAAA,OAAO,CAAC,YAAY,CAClB,QAAQ,EACR,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAG,EAAA,CAAC,IAAI,CAAC,CAAA,CAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAC7D,CAAC;oBACF,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;iBAC/C;aACF;iBAAM,IACL,IAAI,CAAC,qBAAqB;AAC1B,gBAAA,CAAC,IAAI,CAAC,mCAAmC,EACzC;;gBAEA,IAAI,CAAC,mCAAmC,GAAG,UAAU,CACnD,OAAO,IAAI,CAAC,qBAAsB,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,EAC1D,GAAG,CACJ,CAAC;aACH;YAED,IAAI,CAAC,UAAU,EAAE,CAAC;AACpB,SAAC,CAAC,CAAC;KACJ;AAEO,IAAA,cAAc,CAAC,KAAqB,EAAA;;AAE1C,QAAA,IAAI,KAAK,KAAK,SAAS,CAAC,gBAAgB;YAAE,OAAO;AACjD,QAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;KACpB;AAEO,IAAA,MAAM,gBAAgB,GAAA;QAI5B,IAAI,CAAC,SAAS,CAAC,YAAY;AAAE,YAAA,MAAM,mBAAmB,CAAC;QAEvD,MAAM,cAAc,GAAG,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC;AACvE,cAAE,YAAY;cACZ,UAAU,CAAC;AACf,QAAA,MAAM,wBAAwB,GAAiC;AAC7D,YAAA;AACE,gBAAA,KAAK,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE;AACrB,aAAA;AACD,YAAA;AACE,gBAAA,KAAK,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE;AACpB,aAAA;YACD,EAAE;SACH,CAAC;AACF,QAAA,MAAM,qBAAqB,GAAG,wBAAwB,CAAC,GAAG,CAAC,CAAC,UAAU,KACpE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,UAAU,EAAE;YAC5B,CAAC,cAAc,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,gBAAgB,EAAE;AACnD,SAAA,CAAC,CACH,CAAC;QAEF,KAAK,MAAM,WAAW,IAAI;AACxB,YAAA,GAAG,qBAAqB;AACxB,YAAA,GAAG,wBAAwB;AAC5B,SAAA,EAAE;AACD,YAAA,IAAI;gBACF,MAAM,MAAM,GAAG,MAAM,SAAS,CAAC,YAAY,CAAC,YAAY,CAAC;AACvD,oBAAA,KAAK,EAAE,WAAW;AAClB,oBAAA,KAAK,EAAE,KAAK;AACb,iBAAA,CAAC,CAAC;;;;AAIH,gBAAA,MAAM,UAAU,GACd,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;qBAC1B,WAAW,CAAC,UAAU;AACrB,0BAAG,IAAI,CAAC,gBAAyC;AACjD,0BAAE,IAAI,CAAC,gBAAgB,KAAK,aAAa;8BACrC,MAAM;AACR,8BAAE,aAAa,CAAC,CAAC;AACvB,gBAAA,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC;aAC/B;AAAC,YAAA,OAAO,CAAC,EAAE,GAAE;SACf;AAED,QAAA,MAAM,mBAAmB,CAAC;KAC3B;AAEO,IAAA,MAAM,mBAAmB,GAAA;;;AAG/B,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC;QAC/B,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACtC,IAAI,CAAC,MAAM,IAAI,SAAS,IAAI,CAAC,IAAI,CAAC,OAAO;YAAE,OAAO;AAClD,QAAA,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC;KACpB;IAEO,OAAO,gBAAgB,CAAC,MAAmB,EAAA;QACjD,KAAK,MAAM,KAAK,IAAI,MAAM,CAAC,SAAS,EAAE,EAAE;AACtC,YAAA,KAAK,CAAC,IAAI,EAAE,CAAC;AACb,YAAA,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;SAC3B;KACF;AAEO,IAAA,eAAe,CAAC,UAAgC,EAAA;;AAEtD,QAAA,MAAM,WAAW,GAAG,UAAU,KAAK,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACnD,QAAA,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,GAAG,SAAS,GAAG,WAAW,GAAG,GAAG,CAAC;KAC7D;AAEO,IAAA,cAAc,CACpB,WAAwB,EAAA;QAExB,MAAM,UAAU,GAAG,WAAW,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,CAAC;AACnD,QAAA,IAAI,CAAC,UAAU;YAAE,OAAO,IAAI,CAAC;;AAE7B,QAAA,OAAO,wBAAwB,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;AACpD,cAAE,aAAa;cACb,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;AACzC,kBAAE,MAAM;AACR,kBAAE,IAAI,CAAC;KACZ;IAEO,OAAO,aAAa,CAC1B,KAMmB,EACnB,UAAwC,EACxC,MAAiC,EACjC,sBAAsB,GAAG,KAAK,EAAA;QAE9B,MAAM,GAAG,MAAM,IAAI,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AACpD,QAAA,MAAM,WAAW,GAAG,UAAU,IAAI,UAAU,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC;AAClE,QAAA,MAAM,WAAW,GAAG,UAAU,IAAI,UAAU,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC;AAClE,QAAA,MAAM,eAAe,GACnB,UAAU,IAAI,UAAU,CAAC,KAAK;cAC1B,UAAU,CAAC,KAAK;cACf,KAA0B,CAAC,UAAU,IAAK,KAAK,CAAC,KAAgB,CAAC;AACxE,QAAA,MAAM,gBAAgB,GACpB,UAAU,IAAI,UAAU,CAAC,MAAM;cAC3B,UAAU,CAAC,MAAM;cAChB,KAA0B,CAAC,WAAW,IAAK,KAAK,CAAC,MAAiB,CAAC;QAE1E,IAAI,CAAC,sBAAsB,EAAE;AAC3B,YAAA,MAAM,WAAW,GACf,UAAU,IAAI,UAAU,CAAC,eAAe;kBACpC,UAAU,CAAC,eAAe;kBAC1B,eAAe,CAAC;AACtB,YAAA,MAAM,YAAY,GAChB,UAAU,IAAI,UAAU,CAAC,gBAAgB;kBACrC,UAAU,CAAC,gBAAgB;kBAC3B,gBAAgB,CAAC;;;AAGvB,YAAA,IAAI,MAAM,CAAC,KAAK,KAAK,WAAW,EAAE;AAChC,gBAAA,MAAM,CAAC,KAAK,GAAG,WAAW,CAAC;aAC5B;AACD,YAAA,IAAI,MAAM,CAAC,MAAM,KAAK,YAAY,EAAE;AAClC,gBAAA,MAAM,CAAC,MAAM,GAAG,YAAY,CAAC;aAC9B;SACF;AAED,QAAA,MAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,CAAE,CAAC;AAC3D,QAAA,OAAO,CAAC,qBAAqB,GAAG,KAAK,CAAC;QACtC,OAAO,CAAC,SAAS,CACf,KAAK,EACL,WAAW,EACX,WAAW,EACX,eAAe,EACf,gBAAgB,EAChB,CAAC,EACD,CAAC,EACD,MAAM,CAAC,KAAK,EACZ,MAAM,CAAC,MAAM,CACd,CAAC;AACF,QAAA,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;KAC1B;AAEO,IAAA,aAAa,UAAU,CAC7B,sBAUU,EAAA;AASV,QAAA,IAAI,sBAAsB,YAAY,KAAK,EAAE;AAC3C,YAAA,MAAM,SAAS,CAAC,eAAe,CAAC,sBAAsB,CAAC,CAAC;AACxD,YAAA,OAAO,sBAAsB,CAAC;SAC/B;aAAM,IACL,sBAAsB,YAAY,gBAAgB;AAClD,YAAA,sBAAsB,YAAY,iBAAiB;AACnD,YAAA,sBAAsB,YAAY,eAAe;aAChD,iBAAiB,IAAI,MAAM;gBAC1B,sBAAsB,YAAY,eAAe,CAAC;aACnD,aAAa,IAAI,MAAM,IAAI,sBAAsB,YAAY,WAAW,CAAC,EAC1E;AACA,YAAA,OAAO,sBAAsB,CAAC;SAC/B;aAAM,IACL,sBAAsB,YAAY,IAAI;AACtC,YAAA,sBAAsB,YAAY,IAAI;AACtC,YAAA,sBAAsB,YAAY,GAAG;AACrC,YAAA,OAAO,sBAAsB,KAAK,QAAQ,EAC1C;AACA,YAAA,MAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;YAC1B,IACE,sBAAsB,YAAY,IAAI;gBACtC,sBAAsB,YAAY,IAAI,EACtC;gBACA,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,eAAe,CAAC,sBAAsB,CAAC,CAAC;aACzD;iBAAM;AACL,gBAAA,KAAK,CAAC,GAAG,GAAG,sBAAsB,CAAC,QAAQ,EAAE,CAAC;aAC/C;AACD,YAAA,IAAI;AACF,gBAAA,MAAM,SAAS,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;AACvC,gBAAA,OAAO,KAAK,CAAC;aACd;oBAAS;gBACR,IACE,sBAAsB,YAAY,IAAI;oBACtC,sBAAsB,YAAY,IAAI,EACtC;AACA,oBAAA,GAAG,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;iBAChC;aACF;SACF;aAAM;AACL,YAAA,MAAM,yBAAyB,CAAC;SACjC;KACF;AAEO,IAAA,aAAa,eAAe,CAAC,KAAuB,EAAA;QAC1D,IAAI,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,YAAY,KAAK,CAAC;AAAE,YAAA,OAAO;QACvD,MAAM,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,MAAM,KAAI;AAC1C,YAAA,MAAM,QAAQ,GAAG,CAAC,KAAyB,KAAI;AAC7C,gBAAA,KAAK,CAAC,mBAAmB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;AAC5C,gBAAA,KAAK,CAAC,mBAAmB,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;AAC7C,gBAAA,IAAI,KAAK,YAAY,UAAU,EAAE;oBAC/B,MAAM,CAAC,kBAAkB,CAAC,CAAC;iBAC5B;qBAAM;AACL,oBAAA,OAAO,EAAE,CAAC;iBACX;AACH,aAAC,CAAC;AACF,YAAA,KAAK,CAAC,gBAAgB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;AACzC,YAAA,KAAK,CAAC,gBAAgB,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;AAC5C,SAAC,CAAC,CAAC;KACJ;IAEO,OAAO,kBAAkB,CAC/B,yBAAiC,EACjC,IAAY,EACZ,IAAU,EACV,QAAyB,EAAA;AAEzB,QAAA,OAAO,SAAS,CAAC,sBAAsB,CACrC,yBAAyB,EACzB,IAAI,EACJ,IAAI,EACJ,QAAQ,CACT,CAAC;KACH;;IAGO,OAAO,sBAAsB,CACnC,QAAgB,EAChB,IAAY,EACZ,IAAU,EACV,QAAyB,EAAA;AAEzB,QAAA,MAAM,EAAE,GAAG,SAAS,CAAC,gBAAgB,EAAE,CAAC;QACxC,QAAQ,CAAC,WAAW,CAClB;YACE,EAAE;YACF,IAAI;YACJ,IAAI;SACL,EACD,QAAQ,CACT,CAAC;AACF,QAAA,OAAO,EAAE,CAAC;KACX;;AA1xCe,SAAmB,CAAA,mBAAA,GAAG,GAAH,CAAO;AAC1B,SAAgB,CAAA,gBAAA,GAAG,kBAAH,CAAsB;AACvC,SAAuB,CAAA,uBAAA,GAAG,IAAH,CAAQ;AAC/B,SAAgB,CAAA,gBAAA,GAAG,CAAH;;;;"}